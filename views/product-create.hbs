<div class="container ">

    <!-- BEGIN: Content -->
    <div class="login-box">
        <h2 class="text-lg font-medium mr-auto">
            ฟอร์มข้อมูล
        </h2>
        <form id="createproductForm">
            <div class="textbox">
                <label for="name">ชื่อ</label>
                <input type="text" id="name" name="name" required />
            </div>
            <div class="textbox">
                <label for="description">คำอธิบาย</label>
                <input type="text" id="description" name="description" required />
            </div>
            <div class="textbox">
                <label for="category">หมวดหมู่</label>
                <select id="category" name="category" style="width: 100%;height: 40px">
                    {{#each category}}
                    <option value="{{this.dataValues.id}}">{{this.dataValues.name}}</option>
                    {{/each}}
                </select>
            </div>
            <div class="textbox">
                <label for="price">ราคา</label>
                <input type="number" id="price" name="price" required />
            </div>


            <div class="buttons">
                <a class="btn btn-outline-secondary w-24 mr-1" href="/product">ยกเลิก</a>
                <button type="submit">สร้าง</button>
            </div>


        </form>
    </div>
</div>
<!-- END: Content -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    createproductForm.addEventListener('submit', async (event) => {
        event.preventDefault();
        const formData = new FormData(createproductForm);
        const name = formData.get('name');
        const description = formData.get('description');
        const price = formData.get('price');
        const category = formData.get('category');

        try {
            const response = await fetch('/product/create', { // Changed to the correct endpoint
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ name, description, price,category })
            });

            const data = await response.json();
            if (response.ok) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'เพิ่มข้อมูลสำเร็จ',
                    confirmButtonText: 'OK'
                }).then(() => {
                    window.location.href = '/product/'; // Redirect to a different page
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'ไม่สำเร็จ',
                    text: data.error,
                    confirmButtonText: 'OK'
                });
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred. Please try again later.',
                confirmButtonText: 'OK'
            });
        }
    });
</script>